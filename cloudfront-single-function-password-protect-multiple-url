//purpose: simple password protect url(s)
//this function can be used to multiple cloudfront distribution behaviours.
function handler(event) {
  var request = event.request;
  var headers = request.headers;

  // List of allowed URLs and their corresponding users
  var allowedUrls = {
    'example1.com': {
      user: 'username_here',
      pass: 'password_here'
    },
    'example2.com': {
      user: 'username_here',
      pass: 'password_here'
    },
    'example3.com': {
      user: 'username_here',
      pass: 'password_here'
    }
  };

  // Extract the domain from the request headers
  var host = request.headers['host'] ? request.headers['host'].value : '';

  // If the host is not in allowedUrls, return 403 Forbidden
  if (!(host in allowedUrls)) {
    var forbiddenResponse = {
      statusCode: 403,
      statusDescription: 'Forbidden',
      body: 'Access denied to this URL.',
    };
    return forbiddenResponse;
  }

  // Retrieve the correct user and password for the current host
  var expectedUser = allowedUrls[host].user;
  var expectedPass = allowedUrls[host].pass;

  // Basic auth check
  if (headers.authorization) {
    var authHeader = headers.authorization.value;
    var authString = authHeader.split(' ')[1]; // Get the base64 part

    // Decode the base64 encoded string
    var decodedAuth = atob(authString);  // Decodes to "username:password"
    var credentials = decodedAuth.split(':');

    var authUser = credentials[0];
    var authPass = credentials[1];

    // Compare the username and password for the correct host
    if (authUser !== expectedUser || authPass !== expectedPass) {
      var unauthorizedResponse = {
        statusCode: 401,
        statusDescription: 'Unauthorized',
        headers: {
          'www-authenticate': {
            'value': 'Basic realm="Enter credentials."'
          }
        }
      };
      return unauthorizedResponse;
    }
  } else {
    var missingAuthResponse = {
      statusCode: 401,
      statusDescription: 'Unauthorized',
      headers: {
        'www-authenticate': {
          'value': 'Basic realm="Enter credentials."'
        }
      }
    };
    return missingAuthResponse;
  }

  // If everything is valid, return the request
  return request;
}
